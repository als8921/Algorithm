"""
문제
n개의 정수로 이루어진 임의의 수열이 주어진다. 우리는 이 중 연속된 몇 개의 수를 선택해서 구할 수 있는 합 중 가장 큰 합을 구하려고 한다. 단, 수는 한 개 이상 선택해야 한다. 또, 수열에서 수를 하나 제거할 수 있다. (제거하지 않아도 된다)

예를 들어서 10, -4, 3, 1, 5, 6, -35, 12, 21, -1 이라는 수열이 주어졌다고 하자. 여기서 수를 제거하지 않았을 때의 정답은 12+21인 33이 정답이 된다.

만약, -35를 제거한다면, 수열은 10, -4, 3, 1, 5, 6, 12, 21, -1이 되고, 여기서 정답은 10-4+3+1+5+6+12+21인 54가 된다.

입력
첫째 줄에 정수 n(1 ≤ n ≤ 100,000)이 주어지고 둘째 줄에는 n개의 정수로 이루어진 수열이 주어진다. 수는 -1,000보다 크거나 같고, 1,000보다 작거나 같은 정수이다.

출력
첫째 줄에 답을 출력한다.
"""
n = int(input())
a = list(map(int, input().split()))

dp = [[0] * n for i in range(2)]
dp[0][0] = a[0]
dp[1][0] = a[0]
for i in range(1, n):
    dp[0][i] = max(0, dp[0][i-1]) + a[i]
    dp[1][i] = max(dp[1][i-1] + a[i], dp[0][i-1])
print(max(max(dp[0]), max(dp[1])))

"""
10  -4  3   1   5   6   -35 12  21  -1
===
10  6   9   10  15  21  -14 -2  19  18
10  10  13  14  19  25  21  33  54  53


1   -3  4   8   -4  -3  9   2
===
1   -2  2   10  6   3   12  14
1   1

만약 차례대로 더한 값이 음수일 경우 -> 그 값을 버리고 다음 수를 더함
"""